/***
 *  $Id$
 **
 *  File: a0.cpp
 *  Created: Oct 07, 2018
 *
 *  Author: Jaroslaw Zola <jaroslaw.zola@hush.com>
 *  Copyright (c) 2018 Jaroslaw Zola
 */

// DO NOT EDIT THIS FILE
// YOUR CODE MUST BE CONTAINED IN a0.hpp

#include "a0.hpp"

#include <algorithm>
#include <chrono>
#include <cmath>
#include <functional>
#include <iostream>
#include <random>


bool is_prime(int x) {
    if (x < 2) return false;
    for (int i = 2; i <= std::sqrt(x); ++i) if ((x % i) == 0) return false;
    return true;
} // is_prime

template <typename T, typename Pred>
void extract_if(const std::vector<T>& in, std::vector<T>& out, Pred pred) {
    for (const auto& x: in) if (pred(x)) out.push_back(x);
} // extract_if


int main(int argc, const char* argv[]) {
    if (argc != 2) {
        std::cout << "usage: " << "a0 n" << std::endl;
        return -1;
    }

    std::mt19937 rng(13);
    std::uniform_int_distribution<int> ui(1, 10000000);

    std::vector<int> X(std::atol(argv[1]));
    std::generate(std::begin(X), std::end(X), std::bind(ui, rng));

    std::vector<int> Y;

    auto start = std::chrono::system_clock::now();
    omp_extract_if(X, Y, is_prime);
    auto end = std::chrono::system_clock::now();

    std::cout << std::chrono::duration<double>(end - start).count() << std::endl;

    return 0;
} // main
