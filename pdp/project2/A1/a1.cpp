/***
 *  $Id$
 **
 *  File: a1.cpp
 *  Created: Oct 21, 2018
 *
 *  Author: Jaroslaw Zola <jaroslaw.zola@hush.com>
 *  Copyright (c) 2018 Jaroslaw Zola
 */

// DO NOT EDIT THIS FILE
// YOUR CODE MUST BE CONTAINED IN a0.hpp

#include "a1.hpp"

#include <algorithm>
#include <chrono>
#include <cmath>
#include <functional>
#include <iostream>
#include <random>

#include <mpi.h>


bool is_prime(int x) {
    if (x < 2) return false;
    for (int i = 2; i <= std::sqrt(x); ++i) if ((x % i) == 0) return false;
    return true;
} // is_prime


int main(int argc, char* argv[]) {
    int size, rank;

    MPI_Init(&argc, &argv);
    MPI_Comm_size(MPI_COMM_WORLD, &size);
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);

    if (argc != 2) {
        if (rank == 0) std::cout << "usage: " << "a1 n" << std::endl;
        return MPI_Finalize();
    }

    std::mt19937 rng(13 * rank);
    std::uniform_int_distribution<int> ui(1, 10000000);

    std::vector<int> X(std::atol(argv[1]));
    std::generate(std::begin(X), std::end(X), std::bind(ui, rng));

    std::vector<int> Y;

    auto start = MPI_Wtime();
    mpi_extract_if(MPI_COMM_WORLD, X, Y, is_prime);
    MPI_Barrier(MPI_COMM_WORLD);
    auto end = MPI_Wtime();

    if (rank == 0) std::cout << (end - start) << std::endl;

    return MPI_Finalize();
} // main
